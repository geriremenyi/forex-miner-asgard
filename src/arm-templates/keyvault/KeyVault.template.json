{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "sku": {
            "type": "string"
        },
        "enabledForDeployment": {
            "type": "bool"
        },
        "enabledForTemplateDeployment": {
            "type": "bool"
        },
        "enabledForDiskEncryption": {
            "type": "bool"
        },
        "enableRbacAuthorization": {
            "type": "bool"
        },
        "networkAclsDefaultAction": {
            "type": "string"
        },
        "networkAclsBypass": {
            "type": "string"
        },
        "tenantId": {
            "type": "string"
        }
    },
    "variables": {
        "namingPrefix": "forexminer",
        "location": "[resourceGroup().location]",
        "keyVaultName": "[concat(variables('namingPrefix'), 'kv')]",
        "virtualNetworkName": "[concat(variables('namingPrefix'), 'vnet')]",
        "backendSubnetName": "[concat(variables('virtualNetworkName'), 'be')]",
        "backendSubnetResource": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('backendSubnetName'))]"
    },
    "resources": [
         {
            "apiVersion": "2016-10-01",
            "name": "[variables('keyVaultName')]",
            "location": "[variables('location')]",
            "type": "Microsoft.KeyVault/vaults",
            "properties": {
                "sku": {
                    "name": "[parameters('sku')]",
                    "family": "A"
                },
                "enabledForDeployment": "[parameters('enabledForDeployment')]",
                "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
                "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
                "enableRbacAuthorization": "[parameters('enableRbacAuthorization')]",
                "networkAcls": {
                    "defaultAction": "[parameters('networkAclsDefaultAction')]",
                    "bypass": "[parameters('networkAclsBypass')]",
                    "ipRules": [],
                    "virtualNetworkRules": [{
                        "id": "[variables('backendSubnetResource')]"
                    }]
                },
                "tenantId": "[parameters('tenantId')]",
                "accessPolicies": []
            }
        }
    ]
}